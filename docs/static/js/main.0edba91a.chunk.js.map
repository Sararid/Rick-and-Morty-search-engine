{"version":3,"sources":["services/api.js","services/local-storages.js","images/RickandMorty.png","components/Header.js","components/FilterCharName.js","components/FilterCharSpecie.js","components/FilterCharByStatus.js","components/Filters.js","components/RenderCharDetails.js","components/CharNotFound.js","components/RenderCharList.js","images/notFound2.PNG","components/PageNotFound.js","components/CharCard.js","components/Footer.js","services/apiPages.js","services/counters.js","components/ChangePage.js","components/App.js","index.js"],"names":["objectToExport","callToApi","page","fetch","then","response","json","results","map","char","name","species","image","id","status","episode","origin","get","key","defaultValue","localStorageData","localStorage","getItem","JSON","parse","set","value","stringify","setItem","remove","removeItem","clear","Header","className","src","imgLogo","alt","FilterCharName","props","htmlFor","labelText","type","searchName","onChange","ev","handleSearchName","currentTarget","defaultProps","FilterCharSpecie","selectSepecies","handleSelect","FilterCharByStatus","selectStatus","handleStatus","Filters","selectSpecies","RenderCharDetails","CharNotFound","RenderCharList","data","length","listHtml","to","PageNotFound","imgNotFound","class","CharCard","undefined","acc","i","enterNum","changeStatus","Footer","ApiPages","info","pages","state","funcSetState","maxPage","console","log","ChangePage","handleLess","handleMore","onClick","App","useState","setData","ls","setSearchName","setSelectSpecies","setSelectStatus","setPage","useEffect","api","FilteredData","filter","toLocaleLowerCase","includes","sort","a","b","routeData","useRouteMatch","charId","params","characterId","selectedChar","find","parseInt","path","exact","counters","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0edba91a.chunk.js","sourcesContent":["const callToApi = (page) => {\r\n    return fetch('https://rickandmortyapi.com/api/character?page=' + page)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            return response.results\r\n                .map(char => {\r\n                    const result = {\r\n                        name: char.name,\r\n                        species: char.species,\r\n                        image: char.image,\r\n                        id: char.id,\r\n                        status: char.status,\r\n                        episode: char.episode,\r\n                        origin: char.origin.name\r\n\r\n                    }\r\n                    return result;\r\n                })\r\n        });\r\n\r\n};\r\n\r\nconst objectToExport = {\r\n    callToApi: callToApi,\r\n};\r\n\r\nexport default objectToExport;","const get = (key, defaultValue) => {\r\n    const localStorageData = localStorage.getItem(key);\r\n    if (localStorageData === null) {\r\n        return defaultValue;\r\n    } else {\r\n        return JSON.parse(localStorageData);\r\n    }\r\n};\r\n\r\nconst set = (key, value) => {\r\n    const localStorageData = JSON.stringify(value);\r\n    localStorage.setItem(key, localStorageData);\r\n};\r\n\r\nconst remove = key => {\r\n    localStorage.removeItem(key);\r\n};\r\n\r\nconst clear = () => {\r\n    localStorage.clear();\r\n};\r\n\r\n\r\nconst objectToExport = {\r\n    get: get,\r\n    set: set,\r\n    remove: remove,\r\n    clear: clear\r\n};\r\n\r\nexport default objectToExport;","export default __webpack_public_path__ + \"static/media/RickandMorty.de13d484.png\";","import imgLogo from \"../images/RickandMorty.png\";\r\nimport \"../styles/layout/Header.scss\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <img\r\n                    className=\"header__imageLogo\"\r\n                    src={imgLogo}\r\n                    alt=\"Imagen Rick and Morty\"\r\n                />\r\n                <h1 className=\"header__title\">\r\n                    Welcome to Rick & Morty Search browser\r\n                </h1>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FilterCharName = (props) => {\r\n    const handleChangeName = (ev) => {\r\n        props.handleSearchName(ev.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            <label htmlFor={props.id} className='form__labelText'>{props.labelText}</label>\r\n            <input className='form__searchName'\r\n                type={props.type}\r\n                name={props.name}\r\n                id={props.id}\r\n                value={props.searchName}\r\n                onChange={handleChangeName}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nFilterCharName.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nFilterCharName.propTypes = {\r\n    labelText: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    value: PropTypes.string,\r\n    handleSearchName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FilterCharName;\r\n","const FilterCharSpecie = (props) => {\r\n    const changeHandleSelect = (ev) => {\r\n        props.handleSelect(ev.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className='selectOption__item'>\r\n            <label htmlFor=\"species\" className='form__labelText'>Select species</label>\r\n            <select className='form__searchSpecies'\r\n                name=\"species\"\r\n                id=\"species\"\r\n                value={props.selectSepecies}\r\n                onChange={changeHandleSelect}\r\n            >\r\n                <option value=\"All\">All</option>\r\n                <option value=\"Human\">Human</option>\r\n                <option value=\"Alien\">Alien</option>\r\n                <option value=\"Humanoid\">Humanoid</option>\r\n\r\n                <option value=\"Unknow\">Unknow</option>\r\n            </select>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default FilterCharSpecie;\r\n","const FilterCharByStatus = (props) => {\r\n    const changeHandleSelectStatus = (ev) => {\r\n        props.handleStatus(ev.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className='selectOption__item'>\r\n            <label htmlFor=\"status\" className='form__labelText'>Status:</label>\r\n            <select className='form__searchSpecies'\r\n                name=\"status\"\r\n                id=\"status\"\r\n                value={props.selectStatus}\r\n                onChange={changeHandleSelectStatus}\r\n            >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"Alive\">Alive</option>\r\n                <option value=\"Dead\">Dead</option>\r\n                <option value=\"unknown\">Unknown</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterCharByStatus;\r\n","import FilterCharName from \"./FilterCharName\";\r\nimport FilterCharSpecie from \"./FilterCharSpecie\";\r\nimport \"../styles/layout/Filters.scss\";\r\nimport FilterCharByStatus from \"./FilterCharByStatus\";\r\n\r\nconst Filters = (props) => {\r\n    return (\r\n        <form className=\"form\">\r\n            <FilterCharName\r\n                searchName={props.searchName}\r\n                handleSearchName={props.handleSearchName}\r\n                labelText=\"Type name here\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n            />\r\n            <div className=\"selectOption\">\r\n                <FilterCharSpecie\r\n                    selectSpecies={props.selectSepecies}\r\n                    handleSelect={props.handleSelect}\r\n                />\r\n\r\n                <FilterCharByStatus\r\n                    selectStatus={props.selectStatus}\r\n                    handleStatus={props.handleStatus}\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Filters;\r\n","const RenderCharDetails = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"wrapper__listChar--wrap\">\r\n                <img\r\n                    className=\"wrapper__listChar--imageChar\"\r\n                    src={props.char.image}\r\n                    alt={props.char.name}\r\n                />\r\n                <div className=\"wrapper__listChar--styleContent\">\r\n                    <p className=\"wrapper__listChar--textName\">\r\n\r\n                        Name: <strong>{props.char.name}</strong>\r\n                    </p>\r\n                    <p className=\"wrapper__listChar--textSpecie\">\r\n                        Specie: <strong>{props.char.species}</strong>\r\n                    </p>\r\n                    <p className=\"wrapper__listChar--textSpecie\">\r\n                        Status: <strong>{props.char.status}</strong>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RenderCharDetails;\r\n","import '../styles/layout/NotFound.scss';\r\n\r\nconst CharNotFound = () => {\r\n    return (<>\r\n        <section className='wrapperNotFound'>\r\n            <p className='wrapperNotFound__errorText'> NOT FOUND</p>\r\n            <p>Try Again! </p>\r\n        </section>\r\n    </>);\r\n}\r\n\r\nexport default CharNotFound;","import { Link } from \"react-router-dom\";\r\nimport RenderCharDetails from \"./RenderCharDetails\";\r\nimport \"../styles/layout/RenderCharList.scss\";\r\nimport CharNotFound from \"./CharNotFound\";\r\n\r\nconst RenderCharList = (props) => {\r\n    if (props.data.length === 0) {\r\n        return <CharNotFound />;\r\n    } else {\r\n        const listHtml = props.data.map((char) => (\r\n            <li key={char.id} className=\"wrapper__listChar\">\r\n                <Link to={`/character/${char.id}`} className=\"mainWrapper__link\">\r\n                    <RenderCharDetails char={char} />\r\n                </Link>\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <section className=\"mainWrapper\">\r\n                <ul className=\"wrapper\"> {listHtml}</ul>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default RenderCharList;\r\n","export default __webpack_public_path__ + \"static/media/notFound2.a7989f37.PNG\";","import { Link } from \"react-router-dom\";\r\nimport \"../styles/layout/NotFound.scss\";\r\nimport imgNotFound from \"../images/notFound2.PNG\";\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <>\r\n            <section className=\"wrapperNotFound\">\r\n                <img\r\n                    className=\"wrapperNotFound__img\"\r\n                    src={imgNotFound}\r\n                    alt=\"notFound\"\r\n                />\r\n                <Link to=\"/\" className=\"wrapperNotFound__returnText\">\r\n                    <i class=\"fas fa-hand-point-left\"></i> Return to homepage\r\n                </Link>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../styles/layout/CharCard.scss\";\r\nimport PageNotFound from \"./PageNotFound\";\r\n\r\nconst CharCard = (props) => {\r\n    function changeStatus() {\r\n        const status = props.char.status;\r\n        if (status === \"Alive\") {\r\n            return (\r\n                <p>\r\n                    Status: <i class=\"fab fa-reddit-alien\"></i>\r\n                </p>\r\n            );\r\n        } else if (status === \"Dead\") {\r\n            return (\r\n                <p>\r\n                    Status: <i class=\"fas fa-skull-crossbones\"></i>\r\n                </p>\r\n            );\r\n        } else {\r\n            return (\r\n                <p>\r\n                    Status: <i class=\"far fa-question-circle\"></i>\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n\r\n    function enterNum() {\r\n        let acc = 0;\r\n        let episode = props.char.episode;\r\n        for (let i = 0; i < episode.length; i++) {\r\n            acc = i + 1;\r\n        }\r\n        return acc;\r\n    }\r\n\r\n    if (props.char === undefined) {\r\n        return (\r\n            <>\r\n                <PageNotFound />\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <section className=\"wrapperCharCard\">\r\n                    <div className=\"wrapperCharCard__link\">\r\n                        <Link to=\"/\" className=\"wrapperCharCard__link--text\">\r\n                            Back\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"wrapperCharCard__description\">\r\n                        <img\r\n                            className=\"wrapperCharCard__description--img\"\r\n                            src={props.char.image}\r\n                            alt={props.char.name}\r\n                        />\r\n                        <ul className=\"wrapperCharCard__description--listChar\">\r\n                            <li> Name: {props.char.name}</li>\r\n                            <li> Specie: {props.char.species}</li>\r\n                            <li> Origin: {props.char.origin}</li>\r\n                            <li> episodes: {enterNum()}</li>\r\n                            <li> {changeStatus()} </li>\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CharCard;\r\n","import \"../styles/layout/Footer.scss\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer className=\"footer\">\r\n                <h1 className=\"footer__title\">  Rick & Morty Search browser </h1>\r\n                <p className=\"footer__description\">by SaraRid</p>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","const ApiPages = () => {\r\n    return fetch('https://rickandmortyapi.com/api/character')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            return data.info.pages;\r\n        });\r\n};\r\n\r\nexport default ApiPages;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport ApiPages from \"./apiPages\";\r\n\r\nconst prev = (state, funcSetState) => {\r\n    state = state - 1;\r\n    return state < 1\r\n        ? ApiPages().then((maxPage) => {\r\n            console.log(maxPage);\r\n            return funcSetState(maxPage);\r\n        })\r\n        : funcSetState(state);\r\n};\r\n\r\nconst next = (state, funcSetState) => {\r\n    state = state + 1;\r\n    return state > 34 ? funcSetState(1) : funcSetState(state);\r\n};\r\n\r\nexport default {\r\n    prev: prev,\r\n    next: next,\r\n};\r\n","// React\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../styles/layout/ChangePage.scss\";\r\n\r\nconst ChangePage = (props) => {\r\n    const { page, handleLess, handleMore } = props;\r\n\r\n    return (\r\n        <nav className=\"pageNav\">\r\n            <ul className=\"pageNav__list animation_page\">\r\n                <li className=\"pageNav__list--item\" onClick={handleLess}>\r\n                    <i className=\"fas fa-angle-double-left \"></i> Previous page\r\n                </li>\r\n                <span>| Page {page} |</span>\r\n                <li className=\"pageNav__list--item\" onClick={handleMore}>\r\n                    <i className=\"fas fa-angle-double-right \">  </i>Next page\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nChangePage.propTypes = {\r\n    page: PropTypes.number,\r\n    handleMore: PropTypes.func,\r\n    handleLess: PropTypes.func,\r\n};\r\n\r\nexport default ChangePage;\r\n","import \"../styles/Reset.scss\";\r\nimport \"../styles/App.scss\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../services/api\";\r\nimport { Switch, useRouteMatch, Route } from \"react-router-dom\";\r\nimport ls from \"../services/local-storages\";\r\n\r\n\r\nimport Header from \"./Header\";\r\nimport Filters from \"./Filters\";\r\nimport RenderCharList from \"./RenderCharList\";\r\nimport CharCard from \"./CharCard\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\nimport counters from \"../services/counters\";\r\nimport ChangePage from \"./ChangePage\";\r\n\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [searchName, setSearchName] = useState(ls.get(\"name\", \"\"));\r\n  const [selectSepecies, setSelectSpecies] = useState(\"All\");\r\n  const [selectStatus, setSelectStatus] = useState('all');\r\n\r\n  const [page, setPage] = useState(ls.get('page', 1));\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (ls.get('char', []).length > 0) {\r\n  //     console.log(ls.get('char', []));\r\n  //     setData(ls.get('char', []));\r\n  //   } else {\r\n  //     api.callToApi(page).then((initialData) => {\r\n  //       console.log(initialData);\r\n  //       setData(initialData);\r\n  //       ls.set('char', initialData);\r\n  //     });\r\n  //   }\r\n  // }, [page]);\r\n\r\n  // call to API\r\n  useEffect(() => {\r\n    api.callToApi(page).then((data) => setData(data));\r\n  }, [page]);\r\n\r\n\r\n  useEffect(() => {\r\n    ls.set(\"name\", searchName);\r\n  }, [searchName]);\r\n\r\n\r\n  const handleSearchName = (value) => {\r\n    setSearchName(value);\r\n  };\r\n\r\n  const handleSelect = (value) => {\r\n    setSelectSpecies(value);\r\n\r\n  };\r\n\r\n  const handleStatus = (value) => {\r\n    setSelectStatus(value);\r\n    console.log(value)\r\n  }\r\n\r\n  const FilteredData = data\r\n    .filter((char) =>\r\n      char.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase())\r\n    )\r\n    .filter(\r\n      (char) => selectSepecies === \"All\" || selectSepecies === char.species\r\n    )\r\n\r\n    .filter(\r\n      (char) => selectStatus === \"all\" || selectStatus === char.status\r\n    )\r\n    .sort((a, b) => {\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      }\r\n      if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n\r\n  // handler functions to navigate through pages\r\n  const handleLess = () => {\r\n    counters.prev(page, setPage);\r\n  };\r\n  const handleMore = () => {\r\n    counters.next(page, setPage);\r\n  };\r\n\r\n\r\n  const routeData = useRouteMatch(\"/character/:characterId\");\r\n  console.log(routeData)\r\n  const charId = routeData != null ? routeData.params.characterId : \"\";\r\n  const selectedChar = data.find((char) => {\r\n    return char.id === parseInt(charId);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <main className='main'>\r\n            <Filters\r\n              searchName={searchName}\r\n              selectSepecies={selectSepecies}\r\n              selectStatus={selectStatus}\r\n              handleSearchName={handleSearchName}\r\n              handleSelect={handleSelect}\r\n              handleStatus={handleStatus}\r\n            />\r\n            <ChangePage handleLess={handleLess} handleMore={handleMore} page={page} />\r\n\r\n            <RenderCharList data={FilteredData} />\r\n\r\n          </main>\r\n          <Footer />\r\n        </Route>\r\n        <Route path=\"/character/:characterId\">\r\n          <CharCard char={selectedChar} />\r\n        </Route>\r\n        <Route>\r\n          <PageNotFound />\r\n        </Route>\r\n      </Switch>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}